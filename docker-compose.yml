version: '2.1'

services:
  frontend:
    build: ./frontend
    env_file: .env
    restart: unless-stopped
    expose:
      - "3000"
  api:
    image: strapi/strapi
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: production
    volumes:
      - ./api:/srv/app
    expose:
      - "1337"
      - "3500"

  db:
    image: mongo
    restart: unless-stopped
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./db:/data/db
    expose:
      - "27017"
  
  nginx:
    image: nginx
    restart: unless-stopped
    depends_on:
      - api
      - frontend
    links:
      - api
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    expose:
      - "80"
    environment:
      - VIRTUAL_HOST=api.lucaswerner.dev, lucaswerner.dev
      - LETSENCRYPT_HOST=api.lucaswerner.dev, lucaswerner.dev
      - LETSENCRYPT_EMAIL=wernerlucas12@gmail.com
      
  nginx-proxy:
    restart: always
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "certs:/etc/nginx/certs:ro"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
  
      
  nginx-letsencrypt:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    depends_on:
      - nginx-proxy
    volumes_from:
      - nginx-proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "certs:/etc/nginx/certs:rw"

volumes:
  certs:
      
  
    